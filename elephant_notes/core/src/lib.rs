//! Core types and event bus for Elephant Notes.
//!
//! This crate defines the public application messages and state enums.
//! The API is frozen to ensure future extensions do not require modifying
//! existing code.

use std::path::PathBuf;

/// Application states during runtime.
#[derive(Debug, Clone, Copy, PartialEq, Eq)]
pub enum AppState {
    Empty,
    Explorer,
    Editor,
    Dashboard,
    Settings,
}

/// Actions generated by the sidebar component.
#[derive(Debug, Clone, Copy, PartialEq, Eq)]
pub enum SidebarAction {
    Home,
    Search,
    Add,
    Settings,
    Back,
}

/// Messages sent on the global event bus.
#[derive(Debug, Clone)]
pub enum Message {
    Sidebar(SidebarAction),
    Open(PathBuf),
    UpdateSetting(String, String),
    ReloadSettings,
    Tick,
}

/// Sink for events emitted by the UI or other subsystems.
pub trait EventSink {
    fn push(&self, msg: Message);
}

/// Placeholder global state structure.
pub struct GlobalState {
    pub state: AppState,
}

impl Default for GlobalState {
    fn default() -> Self {
        Self { state: AppState::Empty }
    }
}
